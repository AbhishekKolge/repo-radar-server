generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          String       @id @default(uuid())
  name                        String
  username                    String       @unique
  email                       String       @unique
  password                    String?
  dob                         DateTime?    @db.Timestamptz
  contactNumber               String?      @unique
  contactCountry              Country?     @relation(fields: [contactCountryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contactCountryId            String?
  loginMethod                 LoginMethod
  profileImageUrl             String?
  profileImageId              String?
  verificationCode            String?
  verificationCodeExpiration  DateTime?    @db.Timestamptz
  isVerified                  Boolean      @default(false)
  verifiedAt                  DateTime?    @db.Timestamptz
  resetPasswordCode           String?
  resetPasswordCodeExpiration DateTime?    @db.Timestamptz
  createdAt                   DateTime     @default(now()) @db.Timestamptz
  updatedAt                   DateTime     @updatedAt @db.Timestamptz
  notification                Notification @relation(fields: [notificationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  notificationId              String       @unique
  security                    Security     @relation(fields: [securityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  securityId                  String       @unique
}

model Country {
  id        String @id @default(uuid())
  name      String @unique
  shortName String @unique
  phoneCode String
  users     User[]
}

model Notification {
  id           String   @id @default(uuid())
  releaseAlert Boolean  @default(false)
  loginAlert   Boolean  @default(false)
  createdAt    DateTime @default(now()) @db.Timestamptz
  updatedAt    DateTime @updatedAt @db.Timestamptz
  user         User?
}

model Security {
  id            String   @id @default(uuid())
  twoFactorAuth Boolean  @default(false)
  createdAt     DateTime @default(now()) @db.Timestamptz
  updatedAt     DateTime @updatedAt @db.Timestamptz
  user          User?
}

enum LoginMethod {
  GOOGLE
  GITHUB
  NORMAL
}
